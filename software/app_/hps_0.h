#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'reverbFPGA_Qsys' in
 * file 'reverbFPGA_qsys.swinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'paramValueUpdate_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'PARAMVALUEUPDATE_PIO_'.
 * The prefix is the slave descriptor.
 */
#define PARAMVALUEUPDATE_PIO_COMPONENT_TYPE altera_avalon_pio
#define PARAMVALUEUPDATE_PIO_COMPONENT_NAME paramValueUpdate_PIO
#define PARAMVALUEUPDATE_PIO_BASE 0x0
#define PARAMVALUEUPDATE_PIO_SPAN 16
#define PARAMVALUEUPDATE_PIO_END 0xf
#define PARAMVALUEUPDATE_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define PARAMVALUEUPDATE_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PARAMVALUEUPDATE_PIO_CAPTURE 0
#define PARAMVALUEUPDATE_PIO_DATA_WIDTH 2
#define PARAMVALUEUPDATE_PIO_DO_TEST_BENCH_WIRING 0
#define PARAMVALUEUPDATE_PIO_DRIVEN_SIM_VALUE 0
#define PARAMVALUEUPDATE_PIO_EDGE_TYPE NONE
#define PARAMVALUEUPDATE_PIO_FREQ 50000000
#define PARAMVALUEUPDATE_PIO_HAS_IN 1
#define PARAMVALUEUPDATE_PIO_HAS_OUT 0
#define PARAMVALUEUPDATE_PIO_HAS_TRI 0
#define PARAMVALUEUPDATE_PIO_IRQ_TYPE NONE
#define PARAMVALUEUPDATE_PIO_RESET_VALUE 0

/*
 * Macros for device 'mixValue_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'MIXVALUE_PIO_'.
 * The prefix is the slave descriptor.
 */
#define MIXVALUE_PIO_COMPONENT_TYPE altera_avalon_pio
#define MIXVALUE_PIO_COMPONENT_NAME mixValue_PIO
#define MIXVALUE_PIO_BASE 0x10
#define MIXVALUE_PIO_SPAN 16
#define MIXVALUE_PIO_END 0x1f
#define MIXVALUE_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define MIXVALUE_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MIXVALUE_PIO_CAPTURE 0
#define MIXVALUE_PIO_DATA_WIDTH 24
#define MIXVALUE_PIO_DO_TEST_BENCH_WIRING 0
#define MIXVALUE_PIO_DRIVEN_SIM_VALUE 0
#define MIXVALUE_PIO_EDGE_TYPE NONE
#define MIXVALUE_PIO_FREQ 50000000
#define MIXVALUE_PIO_HAS_IN 0
#define MIXVALUE_PIO_HAS_OUT 1
#define MIXVALUE_PIO_HAS_TRI 0
#define MIXVALUE_PIO_IRQ_TYPE NONE
#define MIXVALUE_PIO_RESET_VALUE 0

/*
 * Macros for device 'dampingValue_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'DAMPINGVALUE_PIO_'.
 * The prefix is the slave descriptor.
 */
#define DAMPINGVALUE_PIO_COMPONENT_TYPE altera_avalon_pio
#define DAMPINGVALUE_PIO_COMPONENT_NAME dampingValue_PIO
#define DAMPINGVALUE_PIO_BASE 0x20
#define DAMPINGVALUE_PIO_SPAN 16
#define DAMPINGVALUE_PIO_END 0x2f
#define DAMPINGVALUE_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define DAMPINGVALUE_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DAMPINGVALUE_PIO_CAPTURE 0
#define DAMPINGVALUE_PIO_DATA_WIDTH 24
#define DAMPINGVALUE_PIO_DO_TEST_BENCH_WIRING 0
#define DAMPINGVALUE_PIO_DRIVEN_SIM_VALUE 0
#define DAMPINGVALUE_PIO_EDGE_TYPE NONE
#define DAMPINGVALUE_PIO_FREQ 50000000
#define DAMPINGVALUE_PIO_HAS_IN 0
#define DAMPINGVALUE_PIO_HAS_OUT 1
#define DAMPINGVALUE_PIO_HAS_TRI 0
#define DAMPINGVALUE_PIO_IRQ_TYPE NONE
#define DAMPINGVALUE_PIO_RESET_VALUE 0

/*
 * Macros for device 'decayValue_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'DECAYVALUE_PIO_'.
 * The prefix is the slave descriptor.
 */
#define DECAYVALUE_PIO_COMPONENT_TYPE altera_avalon_pio
#define DECAYVALUE_PIO_COMPONENT_NAME decayValue_PIO
#define DECAYVALUE_PIO_BASE 0x30
#define DECAYVALUE_PIO_SPAN 16
#define DECAYVALUE_PIO_END 0x3f
#define DECAYVALUE_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define DECAYVALUE_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DECAYVALUE_PIO_CAPTURE 0
#define DECAYVALUE_PIO_DATA_WIDTH 24
#define DECAYVALUE_PIO_DO_TEST_BENCH_WIRING 0
#define DECAYVALUE_PIO_DRIVEN_SIM_VALUE 0
#define DECAYVALUE_PIO_EDGE_TYPE NONE
#define DECAYVALUE_PIO_FREQ 50000000
#define DECAYVALUE_PIO_HAS_IN 0
#define DECAYVALUE_PIO_HAS_OUT 1
#define DECAYVALUE_PIO_HAS_TRI 0
#define DECAYVALUE_PIO_IRQ_TYPE NONE
#define DECAYVALUE_PIO_RESET_VALUE 0

/*
 * Macros for device 'preDelayValue_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'PREDELAYVALUE_PIO_'.
 * The prefix is the slave descriptor.
 */
#define PREDELAYVALUE_PIO_COMPONENT_TYPE altera_avalon_pio
#define PREDELAYVALUE_PIO_COMPONENT_NAME preDelayValue_PIO
#define PREDELAYVALUE_PIO_BASE 0x40
#define PREDELAYVALUE_PIO_SPAN 16
#define PREDELAYVALUE_PIO_END 0x4f
#define PREDELAYVALUE_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define PREDELAYVALUE_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PREDELAYVALUE_PIO_CAPTURE 0
#define PREDELAYVALUE_PIO_DATA_WIDTH 24
#define PREDELAYVALUE_PIO_DO_TEST_BENCH_WIRING 0
#define PREDELAYVALUE_PIO_DRIVEN_SIM_VALUE 0
#define PREDELAYVALUE_PIO_EDGE_TYPE NONE
#define PREDELAYVALUE_PIO_FREQ 50000000
#define PREDELAYVALUE_PIO_HAS_IN 0
#define PREDELAYVALUE_PIO_HAS_OUT 1
#define PREDELAYVALUE_PIO_HAS_TRI 0
#define PREDELAYVALUE_PIO_IRQ_TYPE NONE
#define PREDELAYVALUE_PIO_RESET_VALUE 0

/*
 * Macros for device 'paramType_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'PARAMTYPE_PIO_'.
 * The prefix is the slave descriptor.
 */
#define PARAMTYPE_PIO_COMPONENT_TYPE altera_avalon_pio
#define PARAMTYPE_PIO_COMPONENT_NAME paramType_PIO
#define PARAMTYPE_PIO_BASE 0x50
#define PARAMTYPE_PIO_SPAN 16
#define PARAMTYPE_PIO_END 0x5f
#define PARAMTYPE_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define PARAMTYPE_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PARAMTYPE_PIO_CAPTURE 0
#define PARAMTYPE_PIO_DATA_WIDTH 4
#define PARAMTYPE_PIO_DO_TEST_BENCH_WIRING 0
#define PARAMTYPE_PIO_DRIVEN_SIM_VALUE 0
#define PARAMTYPE_PIO_EDGE_TYPE NONE
#define PARAMTYPE_PIO_FREQ 50000000
#define PARAMTYPE_PIO_HAS_IN 1
#define PARAMTYPE_PIO_HAS_OUT 0
#define PARAMTYPE_PIO_HAS_TRI 0
#define PARAMTYPE_PIO_IRQ_TYPE NONE
#define PARAMTYPE_PIO_RESET_VALUE 0

/*
 * Macros for device 'audio_config', class 'altera_up_avalon_audio_and_video_config'
 * The macros are prefixed with 'AUDIO_CONFIG_'.
 * The prefix is the slave descriptor.
 */
#define AUDIO_CONFIG_COMPONENT_TYPE altera_up_avalon_audio_and_video_config
#define AUDIO_CONFIG_COMPONENT_NAME audio_config
#define AUDIO_CONFIG_BASE 0x60
#define AUDIO_CONFIG_SPAN 16
#define AUDIO_CONFIG_END 0x6f


#endif /* _ALTERA_HPS_0_H_ */
