#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'reverbFPGA_Qsys' in
 * file 'reverbFPGA_Qsys.swinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following master:
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'hex5', class 'altera_avalon_pio'
 * The macros are prefixed with 'HEX5_'.
 * The prefix is the slave descriptor.
 */
#define HEX5_COMPONENT_TYPE altera_avalon_pio
#define HEX5_COMPONENT_NAME hex5
#define HEX5_BASE 0x0
#define HEX5_SPAN 16
#define HEX5_END 0xf
#define HEX5_BIT_CLEARING_EDGE_REGISTER 0
#define HEX5_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HEX5_CAPTURE 0
#define HEX5_DATA_WIDTH 6
#define HEX5_DO_TEST_BENCH_WIRING 0
#define HEX5_DRIVEN_SIM_VALUE 0
#define HEX5_EDGE_TYPE NONE
#define HEX5_FREQ 50000000
#define HEX5_HAS_IN 0
#define HEX5_HAS_OUT 1
#define HEX5_HAS_TRI 0
#define HEX5_IRQ_TYPE NONE
#define HEX5_RESET_VALUE 63

/*
 * Macros for device 'hex4', class 'altera_avalon_pio'
 * The macros are prefixed with 'HEX4_'.
 * The prefix is the slave descriptor.
 */
#define HEX4_COMPONENT_TYPE altera_avalon_pio
#define HEX4_COMPONENT_NAME hex4
#define HEX4_BASE 0x10
#define HEX4_SPAN 16
#define HEX4_END 0x1f
#define HEX4_BIT_CLEARING_EDGE_REGISTER 0
#define HEX4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HEX4_CAPTURE 0
#define HEX4_DATA_WIDTH 6
#define HEX4_DO_TEST_BENCH_WIRING 0
#define HEX4_DRIVEN_SIM_VALUE 0
#define HEX4_EDGE_TYPE NONE
#define HEX4_FREQ 50000000
#define HEX4_HAS_IN 0
#define HEX4_HAS_OUT 1
#define HEX4_HAS_TRI 0
#define HEX4_IRQ_TYPE NONE
#define HEX4_RESET_VALUE 63

/*
 * Macros for device 'hex3', class 'altera_avalon_pio'
 * The macros are prefixed with 'HEX3_'.
 * The prefix is the slave descriptor.
 */
#define HEX3_COMPONENT_TYPE altera_avalon_pio
#define HEX3_COMPONENT_NAME hex3
#define HEX3_BASE 0x20
#define HEX3_SPAN 16
#define HEX3_END 0x2f
#define HEX3_BIT_CLEARING_EDGE_REGISTER 0
#define HEX3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HEX3_CAPTURE 0
#define HEX3_DATA_WIDTH 6
#define HEX3_DO_TEST_BENCH_WIRING 0
#define HEX3_DRIVEN_SIM_VALUE 0
#define HEX3_EDGE_TYPE NONE
#define HEX3_FREQ 50000000
#define HEX3_HAS_IN 0
#define HEX3_HAS_OUT 1
#define HEX3_HAS_TRI 0
#define HEX3_IRQ_TYPE NONE
#define HEX3_RESET_VALUE 63

/*
 * Macros for device 'hex2', class 'altera_avalon_pio'
 * The macros are prefixed with 'HEX2_'.
 * The prefix is the slave descriptor.
 */
#define HEX2_COMPONENT_TYPE altera_avalon_pio
#define HEX2_COMPONENT_NAME hex2
#define HEX2_BASE 0x30
#define HEX2_SPAN 16
#define HEX2_END 0x3f
#define HEX2_BIT_CLEARING_EDGE_REGISTER 0
#define HEX2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HEX2_CAPTURE 0
#define HEX2_DATA_WIDTH 6
#define HEX2_DO_TEST_BENCH_WIRING 0
#define HEX2_DRIVEN_SIM_VALUE 0
#define HEX2_EDGE_TYPE NONE
#define HEX2_FREQ 50000000
#define HEX2_HAS_IN 0
#define HEX2_HAS_OUT 1
#define HEX2_HAS_TRI 0
#define HEX2_IRQ_TYPE NONE
#define HEX2_RESET_VALUE 63

/*
 * Macros for device 'hex1', class 'altera_avalon_pio'
 * The macros are prefixed with 'HEX1_'.
 * The prefix is the slave descriptor.
 */
#define HEX1_COMPONENT_TYPE altera_avalon_pio
#define HEX1_COMPONENT_NAME hex1
#define HEX1_BASE 0x40
#define HEX1_SPAN 16
#define HEX1_END 0x4f
#define HEX1_BIT_CLEARING_EDGE_REGISTER 0
#define HEX1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HEX1_CAPTURE 0
#define HEX1_DATA_WIDTH 6
#define HEX1_DO_TEST_BENCH_WIRING 0
#define HEX1_DRIVEN_SIM_VALUE 0
#define HEX1_EDGE_TYPE NONE
#define HEX1_FREQ 50000000
#define HEX1_HAS_IN 0
#define HEX1_HAS_OUT 1
#define HEX1_HAS_TRI 0
#define HEX1_IRQ_TYPE NONE
#define HEX1_RESET_VALUE 63

/*
 * Macros for device 'hex0', class 'altera_avalon_pio'
 * The macros are prefixed with 'HEX0_'.
 * The prefix is the slave descriptor.
 */
#define HEX0_COMPONENT_TYPE altera_avalon_pio
#define HEX0_COMPONENT_NAME hex0
#define HEX0_BASE 0x50
#define HEX0_SPAN 16
#define HEX0_END 0x5f
#define HEX0_BIT_CLEARING_EDGE_REGISTER 0
#define HEX0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HEX0_CAPTURE 0
#define HEX0_DATA_WIDTH 6
#define HEX0_DO_TEST_BENCH_WIRING 0
#define HEX0_DRIVEN_SIM_VALUE 0
#define HEX0_EDGE_TYPE NONE
#define HEX0_FREQ 50000000
#define HEX0_HAS_IN 0
#define HEX0_HAS_OUT 1
#define HEX0_HAS_TRI 0
#define HEX0_IRQ_TYPE NONE
#define HEX0_RESET_VALUE 63

/*
 * Macros for device 'decayValue_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'DECAYVALUE_PIO_'.
 * The prefix is the slave descriptor.
 */
#define DECAYVALUE_PIO_COMPONENT_TYPE altera_avalon_pio
#define DECAYVALUE_PIO_COMPONENT_NAME decayValue_PIO
#define DECAYVALUE_PIO_BASE 0x60
#define DECAYVALUE_PIO_SPAN 16
#define DECAYVALUE_PIO_END 0x6f
#define DECAYVALUE_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define DECAYVALUE_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DECAYVALUE_PIO_CAPTURE 0
#define DECAYVALUE_PIO_DATA_WIDTH 25
#define DECAYVALUE_PIO_DO_TEST_BENCH_WIRING 0
#define DECAYVALUE_PIO_DRIVEN_SIM_VALUE 0
#define DECAYVALUE_PIO_EDGE_TYPE NONE
#define DECAYVALUE_PIO_FREQ 50000000
#define DECAYVALUE_PIO_HAS_IN 0
#define DECAYVALUE_PIO_HAS_OUT 1
#define DECAYVALUE_PIO_HAS_TRI 0
#define DECAYVALUE_PIO_IRQ_TYPE NONE
#define DECAYVALUE_PIO_RESET_VALUE 0

/*
 * Macros for device 'paramType_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'PARAMTYPE_PIO_'.
 * The prefix is the slave descriptor.
 */
#define PARAMTYPE_PIO_COMPONENT_TYPE altera_avalon_pio
#define PARAMTYPE_PIO_COMPONENT_NAME paramType_PIO
#define PARAMTYPE_PIO_BASE 0x70
#define PARAMTYPE_PIO_SPAN 16
#define PARAMTYPE_PIO_END 0x7f
#define PARAMTYPE_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define PARAMTYPE_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PARAMTYPE_PIO_CAPTURE 0
#define PARAMTYPE_PIO_DATA_WIDTH 4
#define PARAMTYPE_PIO_DO_TEST_BENCH_WIRING 0
#define PARAMTYPE_PIO_DRIVEN_SIM_VALUE 0
#define PARAMTYPE_PIO_EDGE_TYPE NONE
#define PARAMTYPE_PIO_FREQ 50000000
#define PARAMTYPE_PIO_HAS_IN 1
#define PARAMTYPE_PIO_HAS_OUT 0
#define PARAMTYPE_PIO_HAS_TRI 0
#define PARAMTYPE_PIO_IRQ_TYPE NONE
#define PARAMTYPE_PIO_RESET_VALUE 0

/*
 * Macros for device 'paramValueUpdate_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'PARAMVALUEUPDATE_PIO_'.
 * The prefix is the slave descriptor.
 */
#define PARAMVALUEUPDATE_PIO_COMPONENT_TYPE altera_avalon_pio
#define PARAMVALUEUPDATE_PIO_COMPONENT_NAME paramValueUpdate_PIO
#define PARAMVALUEUPDATE_PIO_BASE 0x80
#define PARAMVALUEUPDATE_PIO_SPAN 16
#define PARAMVALUEUPDATE_PIO_END 0x8f
#define PARAMVALUEUPDATE_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define PARAMVALUEUPDATE_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PARAMVALUEUPDATE_PIO_CAPTURE 0
#define PARAMVALUEUPDATE_PIO_DATA_WIDTH 2
#define PARAMVALUEUPDATE_PIO_DO_TEST_BENCH_WIRING 0
#define PARAMVALUEUPDATE_PIO_DRIVEN_SIM_VALUE 0
#define PARAMVALUEUPDATE_PIO_EDGE_TYPE NONE
#define PARAMVALUEUPDATE_PIO_FREQ 50000000
#define PARAMVALUEUPDATE_PIO_HAS_IN 1
#define PARAMVALUEUPDATE_PIO_HAS_OUT 0
#define PARAMVALUEUPDATE_PIO_HAS_TRI 0
#define PARAMVALUEUPDATE_PIO_IRQ_TYPE NONE
#define PARAMVALUEUPDATE_PIO_RESET_VALUE 0

/*
 * Macros for device 'mixValue_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'MIXVALUE_PIO_'.
 * The prefix is the slave descriptor.
 */
#define MIXVALUE_PIO_COMPONENT_TYPE altera_avalon_pio
#define MIXVALUE_PIO_COMPONENT_NAME mixValue_PIO
#define MIXVALUE_PIO_BASE 0x90
#define MIXVALUE_PIO_SPAN 16
#define MIXVALUE_PIO_END 0x9f
#define MIXVALUE_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define MIXVALUE_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MIXVALUE_PIO_CAPTURE 0
#define MIXVALUE_PIO_DATA_WIDTH 24
#define MIXVALUE_PIO_DO_TEST_BENCH_WIRING 0
#define MIXVALUE_PIO_DRIVEN_SIM_VALUE 0
#define MIXVALUE_PIO_EDGE_TYPE NONE
#define MIXVALUE_PIO_FREQ 50000000
#define MIXVALUE_PIO_HAS_IN 0
#define MIXVALUE_PIO_HAS_OUT 1
#define MIXVALUE_PIO_HAS_TRI 0
#define MIXVALUE_PIO_IRQ_TYPE NONE
#define MIXVALUE_PIO_RESET_VALUE 0

/*
 * Macros for device 'dampingValue_PIO', class 'altera_avalon_pio'
 * The macros are prefixed with 'DAMPINGVALUE_PIO_'.
 * The prefix is the slave descriptor.
 */
#define DAMPINGVALUE_PIO_COMPONENT_TYPE altera_avalon_pio
#define DAMPINGVALUE_PIO_COMPONENT_NAME dampingValue_PIO
#define DAMPINGVALUE_PIO_BASE 0xa0
#define DAMPINGVALUE_PIO_SPAN 16
#define DAMPINGVALUE_PIO_END 0xaf
#define DAMPINGVALUE_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define DAMPINGVALUE_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DAMPINGVALUE_PIO_CAPTURE 0
#define DAMPINGVALUE_PIO_DATA_WIDTH 25
#define DAMPINGVALUE_PIO_DO_TEST_BENCH_WIRING 0
#define DAMPINGVALUE_PIO_DRIVEN_SIM_VALUE 0
#define DAMPINGVALUE_PIO_EDGE_TYPE NONE
#define DAMPINGVALUE_PIO_FREQ 50000000
#define DAMPINGVALUE_PIO_HAS_IN 0
#define DAMPINGVALUE_PIO_HAS_OUT 1
#define DAMPINGVALUE_PIO_HAS_TRI 0
#define DAMPINGVALUE_PIO_IRQ_TYPE NONE
#define DAMPINGVALUE_PIO_RESET_VALUE 0


#endif /* _ALTERA_HPS_0_H_ */
